@{
    ViewData["Title"] = "Login Page";
    Layout = "_Layout"; // Nome do arquivo de layout compartilhado
}

<div class="container">
    <div class="login-container">
        <div class="logo">
            <img src="~/imagens/logofinal.png" alt="Logo Guia Universidades">
        </div>

        <!-- Snackbar para mensagens de erro -->
        <div id="feedbackMessage" class="feedback-message error"></div>

        <form class="login-form" action="@Url.Action("Login", "Usuarios")" method="POST">
            <input type="email" name="email" placeholder="E-MAIL" required>
            <input type="password" name="senha" placeholder="SENHA" required>
            <button type="submit">ENTRAR</button>
            <a href="#" class="esqueci-senha">Esqueci a Senha</a>
            <div class="cadastre-se">
                <span>ou</span>
                <a href="@Url.Action("Cadastro", "Usuarios")" class="cadastre-se">CADASTRE-SE</a>
            </div>
        </form>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const feedbackMessage = document.getElementById("feedbackMessage");

        // Mostrar a mensagem de erro
        const errorMessage = '@TempData["Error"]';

        if (errorMessage) {
            feedbackMessage.textContent = "Dados inválidos" // Define o texto de erro
            feedbackMessage.className = "feedback-message error show"; // Adiciona a classe de erro

            // Esconde a mensagem após 3 segundos
            setTimeout(function () {
                feedbackMessage.className = feedbackMessage.className.replace("show", ""); // Remove a classe
                feedbackMessage.style.visibility = "hidden"; // Esconde a mensagem
            }, 3000); // Tempo em milissegundos
        }
    });
</script>

<style>
    /* Estilo da Snackbar */
    .feedback-message {
        position: fixed; /* Fixa a mensagem na parte superior */
        top: 20px; /* Distância do topo */
        right: 20px; /* Distância da direita */
        min-width: 250px; /* Largura mínima */
        padding: 16px; /* Espaçamento interno */
        border-radius: 5px; /* Cantos arredondados */
        text-align: center; /* Centraliza o texto */
        transition: visibility 0s, opacity 0.5s linear; /* Transições */
        visibility: hidden; /* Inicialmente escondido */
        opacity: 0; /* Opacidade inicial */
    }

        .feedback-message.success {
            background-color: #d4edda; /* Verde claro para sucesso */
            color: #155724; /* Texto verde escuro */
        }

        .feedback-message.error {
            background-color: #f8d7da; /* Vermelho claro para erro */
            color: #721c24; /* Texto vermelho escuro */
        }

        .feedback-message.show {
            visibility: visible; /* Torna visível */
            opacity: 1; /* Torna opaco */
        }
</style>
